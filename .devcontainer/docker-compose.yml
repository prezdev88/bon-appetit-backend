version: '3.8'

services:
  dev:
    container_name: ${APP_NAME}
    ports:
      - "6060:6060"
    image: mcr.microsoft.com/devcontainers/java:1-21-bullseye
    volumes:
      - ../:/bon-appetit-backend:cached
    command: sleep infinity
    networks:
      - bon-appetit-network
    depends_on:
      - zookeeper
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=${POSTGRES_NAME}

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: ${ZOOKEEPER_NAME}
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - bon-appetit-network

  kafka:
    image: bitnami/kafka:3.5
    container_name: ${KAFKA_NAME}
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - bon-appetit-network
    depends_on:
      - zookeeper
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ${KAFKA_UI_NAME}
    ports:
      - "9012:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - bon-appetit-network
    depends_on:
      - kafka

  postgres:
    image: postgres:17
    container_name: ${POSTGRES_NAME}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - bon-appetit-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  bon-appetit-network:
    driver: bridge

volumes:
  postgres_data:
